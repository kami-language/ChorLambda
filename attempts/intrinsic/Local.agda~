module LocalIntrinsic where

open import Base
open import Utils
open import ChoreoIntrinsic

----------------------------------------------------
-- local types

data ILType (Θ : Roles) : Set where
  _⇒_ : ILType Θ → ILType Θ → ILType Θ
  _＋_ : ILType Θ → ILType Θ → ILType Θ
  _⋆_ : ILType Θ → ILType Θ → ILType Θ
  o : ILType Θ
  ⊥ : ILType Θ

mutual

  infix 3 _⊩ᵥ_
  data _⊩ᵥ_ {Θ} (Γ : List (ILType Θ)) : ILType Θ -> Set where
    ntsend : ∀ {T1 : ILType Θ} (R : Role Θ)
             ------------------------------
           → Γ ⊩ᵥ T1 ⇒ ⊥
 
    ntrecv : ∀ {T} (R : Role Θ)
             ------------------
           → Γ ⊩ᵥ ⊥ ⇒ T

    ntvar : ∀ {T} → T ∈ Γ
             --------------
          → Γ ⊩ᵥ T
          
    ntunit : Γ ⊩ᵥ o
    
    ntbotm : Γ ⊩ᵥ ⊥
    
    ntabs : ∀ {T T′} → (T ∷ Γ) ⊩ₘ T′
             -----------------------
           → Γ ⊩ᵥ T ⇒ T′

    ntpair : ∀ {T T′ : ILType Θ} → Γ ⊩ᵥ T → Γ ⊩ᵥ T′
          -----------------------------------------
          → Γ ⊩ᵥ (T ⋆ T′)
          
    ntproj1 : ∀ {T T′ : ILType Θ}
             ------------------------------------
           → Γ ⊩ᵥ (T ⋆ T′) ⇒ T

    ntproj2 : ∀ {T T′ : ILType Θ}
             ------------------------------------
            → Γ ⊩ᵥ (T ⋆ T′) ⇒ T′

    ntinl : ∀ {T T′ : ILType Θ}
          → Γ ⊩ᵥ T
            -------------------------------
         → Γ ⊩ᵥ T ＋ T′

    ntinr : ∀ {T T′ : ILType Θ}
          → Γ ⊩ᵥ T′
            -------------------------------
          → Γ ⊩ᵥ T ＋ T′



  infix 3 _⊩ₘ_
  data _⊩ₘ_ {Θ} (Γ : List (ILType Θ)) : ILType Θ -> Set where
    ntval : ∀ {T} → Γ ⊩ᵥ T
            ----------------
          → Γ ⊩ₘ T
          
    ntchor⊕ : ∀ {T} (R : Role Θ) (l : Label) → Γ ⊩ₘ T
             --------------------------------------------
           → Γ ⊩ₘ T

    ntoff& : ∀ {T} → Role Θ → List (Label × (Γ ⊩ₘ T))
            ----------------------------------------
          → Γ ⊩ₘ T

    ntcase : ∀ {T₁ T₂ T} → Γ ⊩ₘ (T₁ ＋ T₂) → (T₁ ∷ Γ) ⊩ₘ T → (T₂ ∷ Γ) ⊩ₘ T
             --------------------------------------------------------------------
           → Γ ⊩ₘ T
           
    ntapp : ∀ {T T′} → Γ ⊩ₘ (T ⇒ T′) → Γ ⊩ₘ T
            -------------------------------------
          → Γ ⊩ₘ T′
           
    ntapp2 : Γ ⊩ₘ ⊥ → Γ ⊩ₘ ⊥
            ----------------------
           → Γ ⊩ₘ ⊥

    nt⊔ : ∀ {Γ′ Γ″ : List (ILType Θ)} {T T′} → Γ′ ⊩ₘ T → Γ″ ⊩ₘ T′
            -------------------------------------
          → Γ ⊩ₘ T


